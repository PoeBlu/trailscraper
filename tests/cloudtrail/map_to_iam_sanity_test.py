import os

import pytest

from tests.test_utils_iam import all_aws_api_methods
from trailscraper.cloudtrail import Record

# Actions that we know are supported but aren't in our documentation just yet:
from trailscraper.iam import all_known_iam_permissions

UNDOCUMENTED = {
    "elasticbeanstalk:CreatePlatformVersion",
    "elasticbeanstalk:DeletePlatformVersion",
    "elasticbeanstalk:DescribePlatformVersion",
    "elasticbeanstalk:ListPlatformVersions",
    "events:DescribeEventBus",
    "logs:AssociateKmsKey",
    "logs:DeleteResourcePolicy",
    "logs:DescribeResourcePolicies",
    "logs:DisassociateKmsKey",
    "logs:ListTagsLogGroup",
    "logs:PutResourcePolicy",
    "logs:TagLogGroup",
    "logs:UntagLogGroup",
    "resource-groups:CreateGroup",
    "resource-groups:DeleteGroup",
    "resource-groups:GetGroup",
    "resource-groups:GetGroupQuery",
    "resource-groups:GetTags",
    "resource-groups:ListGroupResources",
    "resource-groups:ListGroups",
    "resource-groups:SearchResources",
    "resource-groups:Tag",
    "resource-groups:Untag",
    "resource-groups:UpdateGroup",
    "resource-groups:UpdateGroupQuery",
    "s3:DeleteObjectTagging",
    "s3:DeleteReplicationConfiguration",
    "s3:GetAnalyticsConfiguration",
    "s3:GetEncryptionConfiguration",
    "s3:GetInventoryConfiguration",
    "s3:GetMetricsConfiguration",
    "s3:PutAnalyticsConfiguration",
    "s3:PutEncryptionConfiguration",
    "s3:PutInventoryConfiguration",
    "s3:PutMetricsConfiguration",
}

# Actions generated by trailscraper that don't match anything in our IAM Documentation sources.
# These can be documentation problems or trailscraper problems
KNOWN_UNKNOWNS = {
    "a4b:AssociateDeviceWithRoom",
    "a4b:AssociateSkillGroupWithRoom",
    "a4b:CreateProfile",
    "a4b:CreateRoom",
    "a4b:CreateSkillGroup",
    "a4b:CreateUser",
    "a4b:DeleteProfile",
    "a4b:DeleteRoom",
    "a4b:DeleteRoomSkillParameter",
    "a4b:DeleteSkillGroup",
    "a4b:DeleteUser",
    "a4b:DisassociateDeviceFromRoom",
    "a4b:DisassociateSkillGroupFromRoom",
    "a4b:GetDevice",
    "a4b:GetProfile",
    "a4b:GetRoom",
    "a4b:GetRoomSkillParameter",
    "a4b:GetSkillGroup",
    "a4b:ListSkills",
    "a4b:ListTags",
    "a4b:PutRoomSkillParameter",
    "a4b:ResolveRoom",
    "a4b:RevokeInvitation",
    "a4b:SearchDevices",
    "a4b:SearchProfiles",
    "a4b:SearchRooms",
    "a4b:SearchSkillGroups",
    "a4b:SearchUsers",
    "a4b:SendInvitation",
    "a4b:StartDeviceSync",
    "a4b:TagResource",
    "a4b:UntagResource",
    "a4b:UpdateDevice",
    "a4b:UpdateProfile",
    "a4b:UpdateRoom",
    "a4b:UpdateSkillGroup",
    "api:DescribeServices",
    "api:GetAttributeValues",
    "api:GetProducts",
    "appstream:CreateImageBuilder",
    "appstream:CreateImageBuilderStreamingURL",
    "appstream:DeleteImage",
    "appstream:DeleteImageBuilder",
    "appstream:DescribeImageBuilders",
    "appstream:ListTagsForResource",
    "appstream:StartImageBuilder",
    "appstream:StopImageBuilder",
    "appstream:TagResource",
    "appstream:UntagResource",
    "appsync:CreateApiKey",
    "appsync:CreateDataSource",
    "appsync:CreateGraphqlApi",
    "appsync:CreateResolver",
    "appsync:CreateType",
    "appsync:DeleteApiKey",
    "appsync:DeleteDataSource",
    "appsync:DeleteGraphqlApi",
    "appsync:DeleteResolver",
    "appsync:DeleteType",
    "appsync:GetDataSource",
    "appsync:GetGraphqlApi",
    "appsync:GetIntrospectionSchema",
    "appsync:GetResolver",
    "appsync:GetSchemaCreationStatus",
    "appsync:GetType",
    "appsync:ListApiKeys",
    "appsync:ListDataSources",
    "appsync:ListGraphqlApis",
    "appsync:ListResolvers",
    "appsync:ListTypes",
    "appsync:StartSchemaCreation",
    "appsync:UpdateApiKey",
    "appsync:UpdateDataSource",
    "appsync:UpdateGraphqlApi",
    "appsync:UpdateResolver",
    "appsync:UpdateType",
    "autoscaling:CreateScalingPlan",
    "autoscaling:DeleteScalingPlan",
    "autoscaling:DeleteScalingPolicy",
    "autoscaling:DeregisterScalableTarget",
    "autoscaling:DescribeScalableTargets",
    "autoscaling:DescribeScalingPlanResources",
    "autoscaling:DescribeScalingPlans",
    "autoscaling:DescribeScalingPolicies",
    "autoscaling:PutScheduledAction",
    "autoscaling:RegisterScalableTarget",
    "budgets:CreateBudget",
    "budgets:CreateNotification",
    "budgets:CreateSubscriber",
    "budgets:DeleteBudget",
    "budgets:DeleteNotification",
    "budgets:DeleteSubscriber",
    "budgets:DescribeBudget",
    "budgets:DescribeBudgets",
    "budgets:DescribeNotificationsForBudget",
    "budgets:DescribeSubscribersForNotification",
    "budgets:UpdateBudget",
    "budgets:UpdateNotification",
    "budgets:UpdateSubscriber",
    "ce:GetCostAndUsage",
    "ce:GetDimensionValues",
    "ce:GetReservationUtilization",
    "ce:GetTags",
    "cloud9:CreateEnvironmentEC",
    "cloud9:CreateEnvironmentMembership",
    "cloud9:DeleteEnvironment",
    "cloud9:DeleteEnvironmentMembership",
    "cloud9:DescribeEnvironmentMemberships",
    "cloud9:DescribeEnvironmentStatus",
    "cloud9:DescribeEnvironments",
    "cloud9:ListEnvironments",
    "cloud9:UpdateEnvironment",
    "cloud9:UpdateEnvironmentMembership",
    "clouddirectory:AttachTypedLink",
    "clouddirectory:CreateTypedLinkFacet",
    "clouddirectory:DeleteTypedLinkFacet",
    "clouddirectory:DetachTypedLink",
    "clouddirectory:GetAppliedSchemaVersion",
    "clouddirectory:GetTypedLinkFacetInformation",
    "clouddirectory:ListIncomingTypedLinks",
    "clouddirectory:ListObjectParentPaths",
    "clouddirectory:ListOutgoingTypedLinks",
    "clouddirectory:ListTypedLinkFacetAttributes",
    "clouddirectory:ListTypedLinkFacetNames",
    "clouddirectory:UpdateTypedLinkFacet",
    "clouddirectory:UpgradeAppliedSchema",
    "clouddirectory:UpgradePublishedSchema",
    "cloudformation:CreateStackInstances",
    "cloudformation:CreateStackSet",
    "cloudformation:DeleteChangeSet",
    "cloudformation:DeleteStackInstances",
    "cloudformation:DeleteStackSet",
    "cloudformation:DescribeStackInstance",
    "cloudformation:DescribeStackSet",
    "cloudformation:DescribeStackSetOperation",
    "cloudformation:ListExports",
    "cloudformation:ListImports",
    "cloudformation:ListStackInstances",
    "cloudformation:ListStackSetOperationResults",
    "cloudformation:ListStackSetOperations",
    "cloudformation:ListStackSets",
    "cloudformation:StopStackSetOperation",
    "cloudformation:UpdateStackInstances",
    "cloudformation:UpdateStackSet",
    "cloudformation:UpdateTerminationProtection",
    "cloudfront:CreateDistributionWithTags",
    "cloudfront:CreateStreamingDistributionWithTags",
    "cloudfront:DeleteServiceLinkedRole",
    "cloudfront:ListTagsForResource",
    "cloudfront:TagResource",
    "cloudfront:UntagResource",
    "cloudhsmv2:CreateCluster",
    "cloudhsmv2:CreateHsm",
    "cloudhsmv2:DeleteCluster",
    "cloudhsmv2:DeleteHsm",
    "cloudhsmv2:DescribeBackups",
    "cloudhsmv2:DescribeClusters",
    "cloudhsmv2:InitializeCluster",
    "cloudhsmv2:ListTags",
    "cloudhsmv2:TagResource",
    "cloudhsmv2:UntagResource",
    "cloudsearch:DefineRankExpression",
    "cloudsearch:DeleteRankExpression",
    "cloudsearch:DescribeDefaultSearchField",
    "cloudsearch:DescribeRankExpressions",
    "cloudsearch:DescribeStemmingOptions",
    "cloudsearch:DescribeStopwordOptions",
    "cloudsearch:DescribeSynonymOptions",
    "cloudsearch:UpdateDefaultSearchField",
    "cloudsearch:UpdateStemmingOptions",
    "cloudsearch:UpdateStopwordOptions",
    "cloudsearch:UpdateSynonymOptions",
    "cloudsearchdomain:Search",
    "cloudsearchdomain:Suggest",
    "cloudsearchdomain:UploadDocuments",
    "codebuild:BatchDeleteBuilds",
    "codebuild:CreateWebhook",
    "codebuild:DeleteWebhook",
    "codebuild:InvalidateProjectCache",
    "codecommit:CreatePullRequest",
    "codecommit:DeleteCommentContent",
    "codecommit:DescribePullRequestEvents",
    "codecommit:GetComment",
    "codecommit:GetCommentsForComparedCommit",
    "codecommit:GetCommentsForPullRequest",
    "codecommit:GetMergeConflicts",
    "codecommit:GetPullRequest",
    "codecommit:ListPullRequests",
    "codecommit:MergePullRequestByFastForward",
    "codecommit:PostCommentForComparedCommit",
    "codecommit:PostCommentForPullRequest",
    "codecommit:PostCommentReply",
    "codecommit:UpdateComment",
    "codecommit:UpdatePullRequestDescription",
    "codecommit:UpdatePullRequestStatus",
    "codecommit:UpdatePullRequestTitle",
    "codedeploy:DeleteGitHubAccountToken",
    "codedeploy:PutLifecycleEventHookExecutionStatus",
    "codestar:ListTagsForProject",
    "codestar:TagProject",
    "codestar:UntagProject",
    "cognito-identity:GetCredentialsForIdentity",
    "cognito-identity:GetId",
    "cognito-identity:GetOpenIdToken",
    "cognito-identity:UnlinkIdentity",
    "cognito-idp:AdminDisableProviderForUser",
    "cognito-idp:AdminLinkProviderForUser",
    "cognito-idp:AdminListUserAuthEvents",
    "cognito-idp:AdminSetUserMFAPreference",
    "cognito-idp:AdminUpdateAuthEventFeedback",
    "cognito-idp:AssociateSoftwareToken",
    "cognito-idp:ChangePassword",
    "cognito-idp:ConfirmDevice",
    "cognito-idp:ConfirmForgotPassword",
    "cognito-idp:ConfirmSignUp",
    "cognito-idp:CreateIdentityProvider",
    "cognito-idp:CreateResourceServer",
    "cognito-idp:CreateUserPoolDomain",
    "cognito-idp:DeleteIdentityProvider",
    "cognito-idp:DeleteResourceServer",
    "cognito-idp:DeleteUser",
    "cognito-idp:DeleteUserAttributes",
    "cognito-idp:DeleteUserPoolDomain",
    "cognito-idp:DescribeIdentityProvider",
    "cognito-idp:DescribeResourceServer",
    "cognito-idp:DescribeRiskConfiguration",
    "cognito-idp:DescribeUserPoolDomain",
    "cognito-idp:ForgetDevice",
    "cognito-idp:ForgotPassword",
    "cognito-idp:GetDevice",
    "cognito-idp:GetIdentityProviderByIdentifier",
    "cognito-idp:GetSigningCertificate",
    "cognito-idp:GetUICustomization",
    "cognito-idp:GetUser",
    "cognito-idp:GetUserAttributeVerificationCode",
    "cognito-idp:GetUserPoolMfaConfig",
    "cognito-idp:GlobalSignOut",
    "cognito-idp:InitiateAuth",
    "cognito-idp:ListDevices",
    "cognito-idp:ListIdentityProviders",
    "cognito-idp:ListResourceServers",
    "cognito-idp:ResendConfirmationCode",
    "cognito-idp:RespondToAuthChallenge",
    "cognito-idp:SetRiskConfiguration",
    "cognito-idp:SetUICustomization",
    "cognito-idp:SetUserMFAPreference",
    "cognito-idp:SetUserPoolMfaConfig",
    "cognito-idp:SetUserSettings",
    "cognito-idp:SignUp",
    "cognito-idp:UpdateAuthEventFeedback",
    "cognito-idp:UpdateDeviceStatus",
    "cognito-idp:UpdateIdentityProvider",
    "cognito-idp:UpdateResourceServer",
    "cognito-idp:UpdateUserAttributes",
    "cognito-idp:VerifySoftwareToken",
    "cognito-idp:VerifyUserAttribute",
    "comprehend:BatchDetectDominantLanguage",
    "comprehend:BatchDetectEntities",
    "comprehend:BatchDetectKeyPhrases",
    "comprehend:BatchDetectSentiment",
    "comprehend:DescribeTopicsDetectionJob",
    "comprehend:DetectDominantLanguage",
    "comprehend:DetectEntities",
    "comprehend:DetectKeyPhrases",
    "comprehend:DetectSentiment",
    "comprehend:ListTopicsDetectionJobs",
    "comprehend:StartTopicsDetectionJob",
    "config:GetDiscoveredResourceCounts",
    "data:DeleteObject",
    "data:DeleteThingShadow",
    "data:DescribeJobExecution",
    "data:DescribeObject",
    "data:GetObject",
    "data:GetPendingJobExecutions",
    "data:GetThingShadow",
    "data:ListItems",
    "data:Publish",
    "data:PutObject",
    "data:StartNextPendingJobExecution",
    "data:UpdateJobExecution",
    "data:UpdateThingShadow",
    "devicefarm:ListOfferingPromotions",
    "directconnect:AllocateHostedConnection",
    "directconnect:AssociateConnectionWithLag",
    "directconnect:AssociateHostedConnection",
    "directconnect:AssociateVirtualInterface",
    "directconnect:CreateBGPPeer",
    "directconnect:CreateDirectConnectGateway",
    "directconnect:CreateDirectConnectGatewayAssociation",
    "directconnect:CreateLag",
    "directconnect:DeleteBGPPeer",
    "directconnect:DeleteDirectConnectGateway",
    "directconnect:DeleteDirectConnectGatewayAssociation",
    "directconnect:DeleteLag",
    "directconnect:DescribeConnectionLoa",
    "directconnect:DescribeDirectConnectGatewayAssociations",
    "directconnect:DescribeDirectConnectGatewayAttachments",
    "directconnect:DescribeDirectConnectGateways",
    "directconnect:DescribeHostedConnections",
    "directconnect:DescribeInterconnectLoa",
    "directconnect:DescribeLags",
    "directconnect:DescribeLoa",
    "directconnect:DescribeTags",
    "directconnect:DisassociateConnectionFromLag",
    "directconnect:TagResource",
    "directconnect:UntagResource",
    "directconnect:UpdateLag",
    "discovery:AssociateConfigurationItemsToApplication",
    "discovery:CreateApplication",
    "discovery:DeleteApplications",
    "discovery:DescribeExportTasks",
    "discovery:DisassociateConfigurationItemsFromApplication",
    "discovery:GetDiscoverySummary",
    "discovery:ListServerNeighbors",
    "discovery:StartExportTask",
    "discovery:UpdateApplication",
    "dms:CreateEventSubscription",
    "dms:DeleteCertificate",
    "dms:DeleteEventSubscription",
    "dms:DescribeCertificates",
    "dms:DescribeEventCategories",
    "dms:DescribeEventSubscriptions",
    "dms:DescribeEvents",
    "dms:DescribeReplicationInstanceTaskLogs",
    "dms:DescribeReplicationTaskAssessmentResults",
    "dms:ImportCertificate",
    "dms:ModifyEventSubscription",
    "dms:ModifyReplicationTask",
    "dms:RebootReplicationInstance",
    "dms:ReloadTables",
    "dms:StartReplicationTaskAssessment",
    "ds:DescribeDomainControllers",
    "ds:UpdateNumberOfDomainControllers",
    "dynamodb:CreateBackup",
    "dynamodb:CreateGlobalTable",
    "dynamodb:DeleteBackup",
    "dynamodb:DescribeBackup",
    "dynamodb:DescribeContinuousBackups",
    "dynamodb:DescribeGlobalTable",
    "dynamodb:DescribeTimeToLive",
    "dynamodb:ListBackups",
    "dynamodb:ListGlobalTables",
    "dynamodb:RestoreTableFromBackup",
    "dynamodb:UpdateGlobalTable",
    "dynamodb:UpdateTimeToLive",
    "ec2:AcceptVpcEndpointConnections",
    "ec2:CopyFpgaImage",
    "ec2:CreateDefaultSubnet",
    "ec2:CreateDefaultVpc",
    "ec2:CreateLaunchTemplate",
    "ec2:CreateLaunchTemplateVersion",
    "ec2:CreateVpcEndpointConnectionNotification",
    "ec2:CreateVpcEndpointServiceConfiguration",
    "ec2:DeleteFpgaImage",
    "ec2:DeleteLaunchTemplate",
    "ec2:DeleteLaunchTemplateVersions",
    "ec2:DeleteNetworkInterfacePermission",
    "ec2:DeleteVpcEndpointConnectionNotifications",
    "ec2:DeleteVpcEndpointServiceConfigurations",
    "ec2:DescribeAggregateIdFormat",
    "ec2:DescribeElasticGpus",
    "ec2:DescribeFpgaImageAttribute",
    "ec2:DescribeInstanceCreditSpecifications",
    "ec2:DescribeLaunchTemplateVersions",
    "ec2:DescribeLaunchTemplates",
    "ec2:DescribeNetworkInterfacePermissions",
    "ec2:DescribePrincipalIdFormat",
    "ec2:DescribeVpcEndpointConnectionNotifications",
    "ec2:DescribeVpcEndpointConnections",
    "ec2:DescribeVpcEndpointServiceConfigurations",
    "ec2:DescribeVpcEndpointServicePermissions",
    "ec2:GetLaunchTemplateData",
    "ec2:ModifyFpgaImageAttribute",
    "ec2:ModifyInstanceCreditSpecification",
    "ec2:ModifyLaunchTemplate",
    "ec2:ModifyVpcEndpointConnectionNotification",
    "ec2:ModifyVpcEndpointServiceConfiguration",
    "ec2:ModifyVpcEndpointServicePermissions",
    "ec2:ModifyVpcTenancy",
    "ec2:RejectVpcEndpointConnections",
    "ec2:ResetFpgaImageAttribute",
    "ecr:DeleteLifecyclePolicy",
    "ecr:GetLifecyclePolicy",
    "ecr:GetLifecyclePolicyPreview",
    "ecr:PutLifecyclePolicy",
    "ecr:StartLifecyclePolicyPreview",
    "ecs:DeleteAttributes",
    "ecs:ListAttributes",
    "ecs:PutAttributes",
    "elasticache:ModifyReplicationGroupShardConfiguration",
    "elasticache:TestFailover",
    "elasticbeanstalk:UpdateTagsForResource",
    "elasticloadbalancing:AddListenerCertificates",
    "elasticloadbalancing:DescribeAccountLimits",
    "elasticloadbalancing:DescribeListenerCertificates",
    "elasticloadbalancing:RemoveListenerCertificates",
    "elasticloadbalancing:SetIpAddressType",
    "elasticmapreduce:AddInstanceFleet",
    "elasticmapreduce:CancelSteps",
    "elasticmapreduce:ListInstanceFleets",
    "elasticmapreduce:ModifyInstanceFleet",
    "elasticmapreduce:PutAutoScalingPolicy",
    "elasticmapreduce:RemoveAutoScalingPolicy",
    "email:CloneReceiptRuleSet",
    "email:CreateConfigurationSet",
    "email:CreateConfigurationSetEventDestination",
    "email:CreateConfigurationSetTrackingOptions",
    "email:CreateCustomVerificationEmailTemplate",
    "email:CreateReceiptFilter",
    "email:CreateReceiptRule",
    "email:CreateReceiptRuleSet",
    "email:CreateTemplate",
    "email:DeleteConfigurationSet",
    "email:DeleteConfigurationSetEventDestination",
    "email:DeleteConfigurationSetTrackingOptions",
    "email:DeleteCustomVerificationEmailTemplate",
    "email:DeleteIdentity",
    "email:DeleteIdentityPolicy",
    "email:DeleteReceiptFilter",
    "email:DeleteReceiptRule",
    "email:DeleteReceiptRuleSet",
    "email:DeleteTemplate",
    "email:DeleteVerifiedEmailAddress",
    "email:DescribeActiveReceiptRuleSet",
    "email:DescribeConfigurationSet",
    "email:DescribeReceiptRule",
    "email:DescribeReceiptRuleSet",
    "email:GetAccountSendingEnabled",
    "email:GetCustomVerificationEmailTemplate",
    "email:GetIdentityDkimAttributes",
    "email:GetIdentityMailFromDomainAttributes",
    "email:GetIdentityNotificationAttributes",
    "email:GetIdentityPolicies",
    "email:GetIdentityVerificationAttributes",
    "email:GetSendQuota",
    "email:GetSendStatistics",
    "email:GetTemplate",
    "email:ListConfigurationSets",
    "email:ListCustomVerificationEmailTemplates",
    "email:ListIdentities",
    "email:ListIdentityPolicies",
    "email:ListReceiptFilters",
    "email:ListReceiptRuleSets",
    "email:ListTemplates",
    "email:ListVerifiedEmailAddresses",
    "email:PutIdentityPolicy",
    "email:ReorderReceiptRuleSet",
    "email:SendBounce",
    "email:SendBulkTemplatedEmail",
    "email:SendCustomVerificationEmail",
    "email:SendEmail",
    "email:SendRawEmail",
    "email:SendTemplatedEmail",
    "email:SetActiveReceiptRuleSet",
    "email:SetIdentityDkimEnabled",
    "email:SetIdentityFeedbackForwardingEnabled",
    "email:SetIdentityHeadersInNotificationsEnabled",
    "email:SetIdentityMailFromDomain",
    "email:SetIdentityNotificationTopic",
    "email:SetReceiptRulePosition",
    "email:TestRenderTemplate",
    "email:UpdateAccountSendingEnabled",
    "email:UpdateConfigurationSetEventDestination",
    "email:UpdateConfigurationSetReputationMetricsEnabled",
    "email:UpdateConfigurationSetSendingEnabled",
    "email:UpdateConfigurationSetTrackingOptions",
    "email:UpdateCustomVerificationEmailTemplate",
    "email:UpdateReceiptRule",
    "email:UpdateTemplate",
    "email:VerifyDomainDkim",
    "email:VerifyDomainIdentity",
    "email:VerifyEmailAddress",
    "email:VerifyEmailIdentity",
    "entitlement:GetEntitlements",
    "es:DeleteElasticsearchServiceRole",
    "es:DescribeElasticsearchInstanceTypeLimits",
    "es:ListElasticsearchInstanceTypes",
    "es:ListElasticsearchVersions",
    "events:PutPermission",
    "events:RemovePermission",
    "gamelift:AcceptMatch",
    "gamelift:CreateGameSessionQueue",
    "gamelift:CreateMatchmakingConfiguration",
    "gamelift:CreateMatchmakingRuleSet",
    "gamelift:CreateVpcPeeringAuthorization",
    "gamelift:CreateVpcPeeringConnection",
    "gamelift:DeleteGameSessionQueue",
    "gamelift:DeleteMatchmakingConfiguration",
    "gamelift:DeleteVpcPeeringAuthorization",
    "gamelift:DeleteVpcPeeringConnection",
    "gamelift:DescribeGameSessionPlacement",
    "gamelift:DescribeGameSessionQueues",
    "gamelift:DescribeMatchmaking",
    "gamelift:DescribeMatchmakingConfigurations",
    "gamelift:DescribeMatchmakingRuleSets",
    "gamelift:DescribeVpcPeeringAuthorizations",
    "gamelift:DescribeVpcPeeringConnections",
    "gamelift:StartGameSessionPlacement",
    "gamelift:StartMatchBackfill",
    "gamelift:StartMatchmaking",
    "gamelift:StopGameSessionPlacement",
    "gamelift:StopMatchmaking",
    "gamelift:UpdateGameSessionQueue",
    "gamelift:UpdateMatchmakingConfiguration",
    "gamelift:ValidateMatchmakingRuleSet",
    "glacier:ListProvisionedCapacity",
    "glacier:PurchaseProvisionedCapacity",
    "glue:BatchDeleteTableVersion",
    "glue:BatchStopJobRun",
    "glue:DeleteTableVersion",
    "glue:GetTableVersion",
    "glue:UpdateCrawlerSchedule",
    "greengrass:CreateResourceDefinition",
    "greengrass:CreateResourceDefinitionVersion",
    "greengrass:CreateSoftwareUpdateJob",
    "greengrass:DeleteResourceDefinition",
    "greengrass:GetResourceDefinition",
    "greengrass:GetResourceDefinitionVersion",
    "greengrass:ListResourceDefinitionVersions",
    "greengrass:ListResourceDefinitions",
    "greengrass:UpdateResourceDefinition",
    "guardduty:AcceptInvitation",
    "guardduty:ArchiveFindings",
    "guardduty:CreateDetector",
    "guardduty:CreateIPSet",
    "guardduty:CreateMembers",
    "guardduty:CreateSampleFindings",
    "guardduty:CreateThreatIntelSet",
    "guardduty:DeclineInvitations",
    "guardduty:DeleteDetector",
    "guardduty:DeleteIPSet",
    "guardduty:DeleteInvitations",
    "guardduty:DeleteMembers",
    "guardduty:DeleteThreatIntelSet",
    "guardduty:DisassociateFromMasterAccount",
    "guardduty:DisassociateMembers",
    "guardduty:GetDetector",
    "guardduty:GetFindings",
    "guardduty:GetFindingsStatistics",
    "guardduty:GetIPSet",
    "guardduty:GetInvitationsCount",
    "guardduty:GetMasterAccount",
    "guardduty:GetMembers",
    "guardduty:GetThreatIntelSet",
    "guardduty:InviteMembers",
    "guardduty:ListDetectors",
    "guardduty:ListFindings",
    "guardduty:ListIPSets",
    "guardduty:ListInvitations",
    "guardduty:ListMembers",
    "guardduty:ListThreatIntelSets",
    "guardduty:StartMonitoringMembers",
    "guardduty:StopMonitoringMembers",
    "guardduty:UnarchiveFindings",
    "guardduty:UpdateDetector",
    "guardduty:UpdateFindingsFeedback",
    "guardduty:UpdateIPSet",
    "guardduty:UpdateThreatIntelSet",
    "inspector:GetAssessmentReport",
    "iot:AddThingToThingGroup",
    "iot:AssociateTargetsWithJob",
    "iot:AttachPolicy",
    "iot:CancelJob",
    "iot:ClearDefaultAuthorizer",
    "iot:CreateAuthorizer",
    "iot:CreateJob",
    "iot:CreateOTAUpdate",
    "iot:CreateRoleAlias",
    "iot:CreateStream",
    "iot:CreateThingGroup",
    "iot:DeleteAuthorizer",
    "iot:DeleteOTAUpdate",
    "iot:DeleteRoleAlias",
    "iot:DeleteStream",
    "iot:DeleteThingGroup",
    "iot:DeleteV2LoggingLevel",
    "iot:DescribeAuthorizer",
    "iot:DescribeCACertificate",
    "iot:DescribeDefaultAuthorizer",
    "iot:DescribeEventConfigurations",
    "iot:DescribeIndex",
    "iot:DescribeJob",
    "iot:DescribeJobExecution",
    "iot:DescribeRoleAlias",
    "iot:DescribeStream",
    "iot:DescribeThingGroup",
    "iot:DescribeThingRegistrationTask",
    "iot:DetachPolicy",
    "iot:GetEffectivePolicies",
    "iot:GetIndexingConfiguration",
    "iot:GetJobDocument",
    "iot:GetOTAUpdate",
    "iot:GetV2LoggingOptions",
    "iot:ListAttachedPolicies",
    "iot:ListAuthorizers",
    "iot:ListCACertificates",
    "iot:ListCertificatesByCA",
    "iot:ListIndices",
    "iot:ListJobExecutionsForJob",
    "iot:ListJobExecutionsForThing",
    "iot:ListJobs",
    "iot:ListOTAUpdates",
    "iot:ListRoleAliases",
    "iot:ListStreams",
    "iot:ListTargetsForPolicy",
    "iot:ListThingGroups",
    "iot:ListThingGroupsForThing",
    "iot:ListThingRegistrationTaskReports",
    "iot:ListThingRegistrationTasks",
    "iot:ListThingsInThingGroup",
    "iot:ListV2LoggingLevels",
    "iot:RegisterThing",
    "iot:RemoveThingFromThingGroup",
    "iot:SearchIndex",
    "iot:SetDefaultAuthorizer",
    "iot:SetV2LoggingLevel",
    "iot:SetV2LoggingOptions",
    "iot:StartThingRegistrationTask",
    "iot:StopThingRegistrationTask",
    "iot:TestAuthorization",
    "iot:TestInvokeAuthorizer",
    "iot:UpdateAuthorizer",
    "iot:UpdateEventConfigurations",
    "iot:UpdateIndexingConfiguration",
    "iot:UpdateRoleAlias",
    "iot:UpdateStream",
    "iot:UpdateThingGroup",
    "iot:UpdateThingGroupsForThing",
    "kinesis:ListShards",
    "kinesisanalytics:AddApplicationCloudWatchLoggingOption",
    "kinesisanalytics:AddApplicationInputProcessingConfiguration",
    "kinesisanalytics:DeleteApplicationCloudWatchLoggingOption",
    "kinesisanalytics:DeleteApplicationInputProcessingConfiguration",
    "kinesisvideo:CreateStream",
    "kinesisvideo:DeleteStream",
    "kinesisvideo:DescribeStream",
    "kinesisvideo:GetDataEndpoint",
    "kinesisvideo:GetMedia",
    "kinesisvideo:GetMediaForFragmentList",
    "kinesisvideo:ListFragments",
    "kinesisvideo:ListStreams",
    "kinesisvideo:ListTagsForStream",
    "kinesisvideo:TagStream",
    "kinesisvideo:UntagStream",
    "kinesisvideo:UpdateDataRetention",
    "kinesisvideo:UpdateStream",
    "lambda:AddEventSource",
    "lambda:DeleteFunctionConcurrency",
    "lambda:GetEventSource",
    "lambda:Invoke",
    "lambda:ListEventSources",
    "lambda:PutFunctionConcurrency",
    "lambda:RemoveEventSource",
    "lambda:UploadFunction",
    "lex:GetExport",
    "lex:GetImport",
    "lex:StartImport",
    "lightsail:AttachDisk",
    "lightsail:AttachInstancesToLoadBalancer",
    "lightsail:AttachLoadBalancerTlsCertificate",
    "lightsail:CreateDisk",
    "lightsail:CreateDiskFromSnapshot",
    "lightsail:CreateDiskSnapshot",
    "lightsail:CreateLoadBalancer",
    "lightsail:CreateLoadBalancerTlsCertificate",
    "lightsail:DeleteDisk",
    "lightsail:DeleteDiskSnapshot",
    "lightsail:DeleteLoadBalancer",
    "lightsail:DeleteLoadBalancerTlsCertificate",
    "lightsail:DetachDisk",
    "lightsail:DetachInstancesFromLoadBalancer",
    "lightsail:GetDisk",
    "lightsail:GetDiskSnapshot",
    "lightsail:GetDiskSnapshots",
    "lightsail:GetDisks",
    "lightsail:GetLoadBalancer",
    "lightsail:GetLoadBalancerMetricData",
    "lightsail:GetLoadBalancerTlsCertificates",
    "lightsail:GetLoadBalancers",
    "lightsail:PutInstancePublicPorts",
    "lightsail:UpdateLoadBalancerAttribute",
    "machinelearning:CreateDataSourceFromS",
    "marketplacecommerceanalytics:GenerateDataSet",
    "marketplacecommerceanalytics:StartSupportDataExport",
    "mechanicalturk:CreateAdditionalAssignmentsForHIT",
    "mediaconvert:CancelJob",
    "mediaconvert:CreateJob",
    "mediaconvert:CreateJobTemplate",
    "mediaconvert:CreatePreset",
    "mediaconvert:CreateQueue",
    "mediaconvert:DeleteJobTemplate",
    "mediaconvert:DeletePreset",
    "mediaconvert:DeleteQueue",
    "mediaconvert:DescribeEndpoints",
    "mediaconvert:GetJob",
    "mediaconvert:GetJobTemplate",
    "mediaconvert:GetPreset",
    "mediaconvert:GetQueue",
    "mediaconvert:ListJobTemplates",
    "mediaconvert:ListJobs",
    "mediaconvert:ListPresets",
    "mediaconvert:ListQueues",
    "mediaconvert:UpdateJobTemplate",
    "mediaconvert:UpdatePreset",
    "mediaconvert:UpdateQueue",
    "medialive:CreateChannel",
    "medialive:CreateInput",
    "medialive:CreateInputSecurityGroup",
    "medialive:DeleteChannel",
    "medialive:DeleteInput",
    "medialive:DeleteInputSecurityGroup",
    "medialive:DescribeChannel",
    "medialive:DescribeInput",
    "medialive:DescribeInputSecurityGroup",
    "medialive:ListChannels",
    "medialive:ListInputSecurityGroups",
    "medialive:ListInputs",
    "medialive:StartChannel",
    "medialive:StopChannel",
    "medialive:UpdateChannel",
    "mediapackage:CreateChannel",
    "mediapackage:CreateOriginEndpoint",
    "mediapackage:DeleteChannel",
    "mediapackage:DeleteOriginEndpoint",
    "mediapackage:DescribeChannel",
    "mediapackage:DescribeOriginEndpoint",
    "mediapackage:ListChannels",
    "mediapackage:ListOriginEndpoints",
    "mediapackage:RotateChannelCredentials",
    "mediapackage:UpdateChannel",
    "mediapackage:UpdateOriginEndpoint",
    "mediastore:CreateContainer",
    "mediastore:DeleteContainer",
    "mediastore:DeleteContainerPolicy",
    "mediastore:DeleteCorsPolicy",
    "mediastore:DescribeContainer",
    "mediastore:GetContainerPolicy",
    "mediastore:GetCorsPolicy",
    "mediastore:ListContainers",
    "mediastore:PutContainerPolicy",
    "mediastore:PutCorsPolicy",
    "metering:BatchMeterUsage",
    "metering:MeterUsage",
    "metering:ResolveCustomer",
    "mgh:AssociateCreatedArtifact",
    "mgh:AssociateDiscoveredResource",
    "mgh:CreateProgressUpdateStream",
    "mgh:DeleteProgressUpdateStream",
    "mgh:DescribeApplicationState",
    "mgh:DescribeMigrationTask",
    "mgh:DisassociateCreatedArtifact",
    "mgh:DisassociateDiscoveredResource",
    "mgh:ImportMigrationTask",
    "mgh:ListCreatedArtifacts",
    "mgh:ListDiscoveredResources",
    "mgh:ListMigrationTasks",
    "mgh:ListProgressUpdateStreams",
    "mgh:NotifyApplicationState",
    "mgh:NotifyMigrationTaskState",
    "mgh:PutResourceAttributes",
    "mobile:CreateProject",
    "mobile:DeleteProject",
    "mobile:DescribeBundle",
    "mobile:DescribeProject",
    "mobile:ExportBundle",
    "mobile:ExportProject",
    "mobile:ListBundles",
    "mobile:ListProjects",
    "mobile:UpdateProject",
    "mq:CreateBroker",
    "mq:CreateConfiguration",
    "mq:CreateUser",
    "mq:DeleteBroker",
    "mq:DeleteUser",
    "mq:DescribeBroker",
    "mq:DescribeConfiguration",
    "mq:DescribeConfigurationRevision",
    "mq:DescribeUser",
    "mq:ListBrokers",
    "mq:ListConfigurationRevisions",
    "mq:ListConfigurations",
    "mq:ListUsers",
    "mq:RebootBroker",
    "mq:UpdateBroker",
    "mq:UpdateConfiguration",
    "mq:UpdateUser",
    "opsworks:DeregisterRdsDbInstance",
    "opsworks:DescribeAgentVersions",
    "opsworks:DescribeMyUserProfile",
    "opsworks:DescribeOperatingSystems",
    "opsworks:ListTags",
    "opsworks:TagResource",
    "opsworks:UntagResource",
    "organizations:DisableAWSServiceAccess",
    "organizations:EnableAWSServiceAccess",
    "organizations:ListAWSServiceAccessForOrganization",
    "pinpoint:CreateApp",
    "pinpoint:CreateCampaign",
    "pinpoint:CreateImportJob",
    "pinpoint:CreateSegment",
    "pinpoint:DeleteAdmChannel",
    "pinpoint:DeleteApnsChannel",
    "pinpoint:DeleteApnsSandboxChannel",
    "pinpoint:DeleteApnsVoipChannel",
    "pinpoint:DeleteApnsVoipSandboxChannel",
    "pinpoint:DeleteApp",
    "pinpoint:DeleteBaiduChannel",
    "pinpoint:DeleteCampaign",
    "pinpoint:DeleteEmailChannel",
    "pinpoint:DeleteEventStream",
    "pinpoint:DeleteGcmChannel",
    "pinpoint:DeleteSegment",
    "pinpoint:DeleteSmsChannel",
    "pinpoint:GetAdmChannel",
    "pinpoint:GetApnsChannel",
    "pinpoint:GetApnsSandboxChannel",
    "pinpoint:GetApnsVoipChannel",
    "pinpoint:GetApnsVoipSandboxChannel",
    "pinpoint:GetApp",
    "pinpoint:GetApplicationSettings",
    "pinpoint:GetApps",
    "pinpoint:GetBaiduChannel",
    "pinpoint:GetCampaign",
    "pinpoint:GetCampaignActivities",
    "pinpoint:GetCampaignVersion",
    "pinpoint:GetCampaignVersions",
    "pinpoint:GetCampaigns",
    "pinpoint:GetEmailChannel",
    "pinpoint:GetEndpoint",
    "pinpoint:GetEventStream",
    "pinpoint:GetGcmChannel",
    "pinpoint:GetImportJob",
    "pinpoint:GetImportJobs",
    "pinpoint:GetSegment",
    "pinpoint:GetSegmentImportJobs",
    "pinpoint:GetSegmentVersion",
    "pinpoint:GetSegmentVersions",
    "pinpoint:GetSegments",
    "pinpoint:GetSmsChannel",
    "pinpoint:PutEventStream",
    "pinpoint:SendMessages",
    "pinpoint:SendUsersMessages",
    "pinpoint:UpdateAdmChannel",
    "pinpoint:UpdateApnsChannel",
    "pinpoint:UpdateApnsSandboxChannel",
    "pinpoint:UpdateApnsVoipChannel",
    "pinpoint:UpdateApnsVoipSandboxChannel",
    "pinpoint:UpdateApplicationSettings",
    "pinpoint:UpdateBaiduChannel",
    "pinpoint:UpdateCampaign",
    "pinpoint:UpdateEmailChannel",
    "pinpoint:UpdateEndpoint",
    "pinpoint:UpdateEndpointsBatch",
    "pinpoint:UpdateGcmChannel",
    "pinpoint:UpdateSegment",
    "pinpoint:UpdateSmsChannel",
    "rds:AddRoleToDBCluster",
    "rds:CopyDBClusterParameterGroup",
    "rds:DescribeSourceRegions",
    "rds:DescribeValidDBInstanceModifications",
    "rds:ModifyDBSnapshot",
    "rds:RemoveRoleFromDBCluster",
    "rds:RestoreDBClusterFromS",
    "rds:RestoreDBInstanceFromS",
    "redshift:DeleteSnapshotCopyGrant",
    "redshift:RestoreTableFromClusterSnapshot",
    "rekognition:CreateStreamProcessor",
    "rekognition:DeleteStreamProcessor",
    "rekognition:DescribeStreamProcessor",
    "rekognition:DetectText",
    "rekognition:GetCelebrityInfo",
    "rekognition:GetCelebrityRecognition",
    "rekognition:GetContentModeration",
    "rekognition:GetFaceDetection",
    "rekognition:GetFaceSearch",
    "rekognition:GetLabelDetection",
    "rekognition:GetPersonTracking",
    "rekognition:ListStreamProcessors",
    "rekognition:RecognizeCelebrities",
    "rekognition:StartCelebrityRecognition",
    "rekognition:StartContentModeration",
    "rekognition:StartFaceDetection",
    "rekognition:StartFaceSearch",
    "rekognition:StartLabelDetection",
    "rekognition:StartPersonTracking",
    "rekognition:StartStreamProcessor",
    "rekognition:StopStreamProcessor",
    "route53:GetAccountLimit",
    "route53:GetHostedZoneLimit",
    "route53:GetReusableDelegationSetLimit",
    "route53domains:CheckDomainTransferability",
    "runtime:InvokeEndpoint",
    "sagemaker:AddTags",
    "sagemaker:CreateEndpoint",
    "sagemaker:CreateEndpointConfig",
    "sagemaker:CreateModel",
    "sagemaker:CreateNotebookInstance",
    "sagemaker:CreatePresignedNotebookInstanceUrl",
    "sagemaker:CreateTrainingJob",
    "sagemaker:DeleteEndpoint",
    "sagemaker:DeleteEndpointConfig",
    "sagemaker:DeleteModel",
    "sagemaker:DeleteNotebookInstance",
    "sagemaker:DeleteTags",
    "sagemaker:DescribeEndpoint",
    "sagemaker:DescribeEndpointConfig",
    "sagemaker:DescribeModel",
    "sagemaker:DescribeNotebookInstance",
    "sagemaker:DescribeTrainingJob",
    "sagemaker:ListEndpointConfigs",
    "sagemaker:ListEndpoints",
    "sagemaker:ListModels",
    "sagemaker:ListNotebookInstances",
    "sagemaker:ListTags",
    "sagemaker:ListTrainingJobs",
    "sagemaker:StartNotebookInstance",
    "sagemaker:StopNotebookInstance",
    "sagemaker:StopTrainingJob",
    "sagemaker:UpdateEndpoint",
    "sagemaker:UpdateEndpointWeightsAndCapacities",
    "sagemaker:UpdateNotebookInstance",
    "serverlessrepo:CreateApplication",
    "serverlessrepo:CreateApplicationVersion",
    "serverlessrepo:CreateCloudFormationChangeSet",
    "serverlessrepo:GetApplication",
    "serverlessrepo:GetApplicationPolicy",
    "serverlessrepo:ListApplicationVersions",
    "serverlessrepo:ListApplications",
    "serverlessrepo:PutApplicationPolicy",
    "serverlessrepo:UpdateApplication",
    "servicecatalog:AssociateTagOptionWithResource",
    "servicecatalog:CopyProduct",
    "servicecatalog:CreateProvisionedProductPlan",
    "servicecatalog:CreateTagOption",
    "servicecatalog:DeleteProvisionedProductPlan",
    "servicecatalog:DescribeCopyProductStatus",
    "servicecatalog:DescribeProvisionedProduct",
    "servicecatalog:DescribeProvisionedProductPlan",
    "servicecatalog:DescribeTagOption",
    "servicecatalog:DisassociateTagOptionFromResource",
    "servicecatalog:ExecuteProvisionedProductPlan",
    "servicecatalog:ListProvisionedProductPlans",
    "servicecatalog:ListResourcesForTagOption",
    "servicecatalog:ListTagOptions",
    "servicecatalog:SearchProvisionedProducts",
    "servicecatalog:UpdateTagOption",
    "servicediscovery:CreatePrivateDnsNamespace",
    "servicediscovery:CreatePublicDnsNamespace",
    "servicediscovery:CreateService",
    "servicediscovery:DeleteNamespace",
    "servicediscovery:DeleteService",
    "servicediscovery:DeregisterInstance",
    "servicediscovery:GetInstance",
    "servicediscovery:GetInstancesHealthStatus",
    "servicediscovery:GetNamespace",
    "servicediscovery:GetOperation",
    "servicediscovery:GetService",
    "servicediscovery:ListInstances",
    "servicediscovery:ListNamespaces",
    "servicediscovery:ListOperations",
    "servicediscovery:ListServices",
    "servicediscovery:RegisterInstance",
    "servicediscovery:UpdateService",
    "shield:GetSubscriptionState",
    "sms:CreateReplicationJob",
    "sms:DeleteReplicationJob",
    "sms:DeleteServerCatalog",
    "sms:DisassociateConnector",
    "sms:GetConnectors",
    "sms:GetReplicationJobs",
    "sms:GetReplicationRuns",
    "sms:GetServers",
    "sms:ImportServerCatalog",
    "sms:StartOnDemandReplicationRun",
    "sms:UpdateReplicationJob",
    "sqs:ListQueueTags",
    "sqs:TagQueue",
    "sqs:UntagQueue",
    "ssm:CreateResourceDataSync",
    "ssm:DeleteParameters",
    "ssm:DeleteResourceDataSync",
    "ssm:DescribeAutomationStepExecutions",
    "ssm:GetMaintenanceWindowExecutionTaskInvocation",
    "ssm:GetMaintenanceWindowTask",
    "ssm:ListComplianceItems",
    "ssm:ListComplianceSummaries",
    "ssm:ListResourceComplianceSummaries",
    "ssm:ListResourceDataSync",
    "ssm:SendAutomationSignal",
    "states:DescribeStateMachineForExecution",
    "states:UpdateStateMachine",
    "storagegateway:NotifyWhenUploaded",
    "support:AddAttachmentsToSet",
    "support:AddCommunicationToCase",
    "support:CreateCase",
    "support:DescribeAttachment",
    "support:DescribeCases",
    "support:DescribeCommunications",
    "support:DescribeServices",
    "support:DescribeSeverityLevels",
    "support:DescribeTrustedAdvisorCheckRefreshStatuses",
    "support:DescribeTrustedAdvisorCheckResult",
    "support:DescribeTrustedAdvisorCheckSummaries",
    "support:DescribeTrustedAdvisorChecks",
    "support:RefreshTrustedAdvisorCheck",
    "support:ResolveCase",
    "transcribe:GetTranscriptionJob",
    "transcribe:ListTranscriptionJobs",
    "transcribe:StartTranscriptionJob",
    "translate:TranslateText",
    "waf-regional:CreateGeoMatchSet",
    "waf-regional:CreateRegexMatchSet",
    "waf-regional:CreateRegexPatternSet",
    "waf-regional:CreateRuleGroup",
    "waf-regional:DeleteGeoMatchSet",
    "waf-regional:DeleteRegexMatchSet",
    "waf-regional:DeleteRegexPatternSet",
    "waf-regional:DeleteRuleGroup",
    "waf-regional:GetGeoMatchSet",
    "waf-regional:GetRegexMatchSet",
    "waf-regional:GetRegexPatternSet",
    "waf-regional:GetRuleGroup",
    "waf-regional:ListActivatedRulesInRuleGroup",
    "waf-regional:ListGeoMatchSets",
    "waf-regional:ListRateBasedRules",
    "waf-regional:ListRegexMatchSets",
    "waf-regional:ListRegexPatternSets",
    "waf-regional:ListRuleGroups",
    "waf-regional:ListSubscribedRuleGroups",
    "waf-regional:UpdateGeoMatchSet",
    "waf-regional:UpdateRegexMatchSet",
    "waf-regional:UpdateRegexPatternSet",
    "waf-regional:UpdateRuleGroup",
    "waf:CreateGeoMatchSet",
    "waf:CreateRegexMatchSet",
    "waf:CreateRegexPatternSet",
    "waf:CreateRuleGroup",
    "waf:DeleteGeoMatchSet",
    "waf:DeleteRegexMatchSet",
    "waf:DeleteRegexPatternSet",
    "waf:DeleteRuleGroup",
    "waf:GetGeoMatchSet",
    "waf:GetRegexMatchSet",
    "waf:GetRegexPatternSet",
    "waf:GetRuleGroup",
    "waf:ListActivatedRulesInRuleGroup",
    "waf:ListGeoMatchSets",
    "waf:ListRateBasedRules",
    "waf:ListRegexMatchSets",
    "waf:ListRegexPatternSets",
    "waf:ListRuleGroups",
    "waf:ListSubscribedRuleGroups",
    "waf:UpdateGeoMatchSet",
    "waf:UpdateRegexMatchSet",
    "waf:UpdateRegexPatternSet",
    "waf:UpdateRuleGroup",
    "workdocs:AbortDocumentVersionUpload",
    "workdocs:AddResourcePermissions",
    "workdocs:CreateComment",
    "workdocs:CreateCustomMetadata",
    "workdocs:CreateFolder",
    "workdocs:CreateLabels",
    "workdocs:CreateNotificationSubscription",
    "workdocs:CreateUser",
    "workdocs:DeleteComment",
    "workdocs:DeleteCustomMetadata",
    "workdocs:DeleteDocument",
    "workdocs:DeleteFolder",
    "workdocs:DeleteFolderContents",
    "workdocs:DeleteLabels",
    "workdocs:DeleteNotificationSubscription",
    "workdocs:DeleteUser",
    "workdocs:DescribeActivities",
    "workdocs:DescribeComments",
    "workdocs:DescribeDocumentVersions",
    "workdocs:DescribeFolderContents",
    "workdocs:DescribeGroups",
    "workdocs:DescribeNotificationSubscriptions",
    "workdocs:DescribeResourcePermissions",
    "workdocs:DescribeRootFolders",
    "workdocs:DescribeUsers",
    "workdocs:GetCurrentUser",
    "workdocs:GetDocument",
    "workdocs:GetDocumentPath",
    "workdocs:GetDocumentVersion",
    "workdocs:GetFolder",
    "workdocs:GetFolderPath",
    "workdocs:InitiateDocumentVersionUpload",
    "workdocs:RemoveAllResourcePermissions",
    "workdocs:RemoveResourcePermission",
    "workdocs:UpdateDocument",
    "workdocs:UpdateDocumentVersion",
    "workdocs:UpdateFolder",
    "workdocs:UpdateUser",
    "workmail:AssociateDelegateToResource",
    "workmail:AssociateMemberToGroup",
    "workmail:CreateAlias",
    "workmail:CreateResource",
    "workmail:CreateUser",
    "workmail:DeleteAlias",
    "workmail:DeleteGroup",
    "workmail:DeleteResource",
    "workmail:DeleteUser",
    "workmail:DeregisterFromWorkMail",
    "workmail:DescribeGroup",
    "workmail:DescribeOrganization",
    "workmail:DescribeResource",
    "workmail:DescribeUser",
    "workmail:DisassociateDelegateFromResource",
    "workmail:DisassociateMemberFromGroup",
    "workmail:ListAliases",
    "workmail:ListGroupMembers",
    "workmail:ListGroups",
    "workmail:ListOrganizations",
    "workmail:ListResourceDelegates",
    "workmail:ListResources",
    "workmail:ListUsers",
    "workmail:RegisterToWorkMail",
    "workmail:ResetPassword",
    "workmail:UpdatePrimaryEmailAddress",
    "workmail:UpdateResource",
}


def unknown_actions():
    iam_actions_from_api_calls = set()
    for api_call in all_aws_api_methods():
        x = api_call.split(":")
        r = Record(f"{x[0]}.amazonaws.com", x[1])
        statement = r.to_statement()
        if statement is not None:
            iam_actions_from_api_calls.add(statement.Action[0].json_repr())

    known_actions = all_known_iam_permissions()

    return iam_actions_from_api_calls.difference(known_actions)


@pytest.mark.skipif(os.getenv('INCLUDE_IAM_SANITY_TEST', None) is None, reason="changes often")
def test_api_calls_map_to_known_iam_action():
    assert unknown_actions() == KNOWN_UNKNOWNS.union(UNDOCUMENTED)
